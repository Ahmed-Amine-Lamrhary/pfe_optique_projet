using MenuWithSubMenu.Model;
using MenuWithSubMenu.Utils;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MenuWithSubMenu.Pages
{
    public partial class Ophtalmologues : Page
    {
        dbEntities db;
        List<ophtalmologue> listOphta;

        int count;

        public Ophtalmologues()
        {
            InitializeComponent();

            db = new dbEntities();

            getOphtalmologues(0);
        }

        private async void getOphtalmologues(int skip)
        {
            loadingBox.Visibility = Visibility.Visible;
            ophtalmologuesDataGrid.Visibility = Visibility.Collapsed;
            nothingBox.Visibility = Visibility.Collapsed;

            try
            {
                listOphta = await db.ophtalmologues.ToListAsync();

                count = (int)Math.Ceiling((decimal)listOphta.Count / 10);
                pagination.MaxPageCount = count;
                ophtalmologuesDataGrid.ItemsSource = listOphta.Skip(skip).Take(10);

                ophtalmologuesDataGrid.Visibility = Visibility.Visible;
            }
            catch (Exception exp)
            {
                Console.WriteLine(exp.Message);
                nothingBox.Visibility = Visibility.Visible;
            }
            finally
            {
                loadingBox.Visibility = Visibility.Collapsed;
            }
        }


        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var item in grid.Columns)
            {
                if (item.Header.ToString() == "Edit")
                {
                    item.DisplayIndex = grid.Columns.Count - 1;
                    break;
                }
            }
        }

        private void AddPresetButton_Click(object sender, RoutedEventArgs e)
        {
            var addButton = sender as FrameworkElement;
            if (addButton != null)
            {
                addButton.ContextMenu.IsOpen = true;
            }
        }

        private void voirOphtalmologue(object sender, RoutedEventArgs e)
        {
            ophtalmologue ophtaRow = ophtalmologuesDataGrid.SelectedItem as ophtalmologue;
            int ophtaId = ophtaRow.id;

            OphtaProfile ophtaProfile = new OphtaProfile(ophtaId, this);

            MyContext.navigateTo(ophtaProfile);
        }

        private void updateOphtalmologue(object sender, RoutedEventArgs e)
        {

            ophtalmologue ophtaRow = ophtalmologuesDataGrid.SelectedItem as ophtalmologue;
            int ophtaId = ophtaRow.id;
            UpdateOphta update = new UpdateOphta(db.ophtalmologues.Where(ophtalmologue => ophtalmologue.id == ophtaId).SingleOrDefault(), this);
            MyContext.navigateTo(update);
        }
        private void deleteOphtalmologue(object sender, RoutedEventArgs e)
        {

            ophtalmologue ophtaRow = ophtalmologuesDataGrid.SelectedItem as ophtalmologue;
            db.ophtalmologues.Remove(ophtaRow);
            db.SaveChanges();
        }
        private void addOphtalmologue(object sender, RoutedEventArgs e)
        {
            AddOphta add_ophta = new AddOphta();
            MyContext.navigateTo(add_ophta);
            ophtalmologuesDataGrid.Items.Refresh();
        }

        private void pagination_PageUpdated(object sender, HandyControl.Data.FunctionEventArgs<int> e)
        {
            getOphtalmologues((e.Info - 1) * 10);
        }
    }
}
