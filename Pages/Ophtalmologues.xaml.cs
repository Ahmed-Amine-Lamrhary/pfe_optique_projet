using MenuWithSubMenu.Model;
using MenuWithSubMenu.Utils;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MenuWithSubMenu.Pages
{
    public partial class Ophtalmologues : Page
    {
        dbEntities db;
        List<ophtalmologue> listOphta;

        private List<ophtalmologue> checkedOphta = new List<ophtalmologue>();

        int count;

        public Ophtalmologues()
        {
            InitializeComponent();

            db = new dbEntities();

            getOphtalmologues(0);
        }

        private async void getOphtalmologues(int skip)
        {
            loadingBox.Visibility = Visibility.Visible;
            ophtalmologuesDataGrid.Visibility = Visibility.Collapsed;
            nothingBox.Visibility = Visibility.Collapsed;

            try
            {
                if (searchBar.Text != "")
                {
                    listOphta = await db.ophtalmologues.Where(c => c.nom.Contains(searchBar.Text) || c.prenom.Contains(searchBar.Text) || c.email.Contains(searchBar.Text)).ToListAsync();
                }
                else
                {
                    listOphta = await db.ophtalmologues.ToListAsync();
                }

                if (listOphta.Count() == 0)
                {
                    nothingBox.Visibility = Visibility.Visible;
                    return;
                }

                count = (int)Math.Ceiling((decimal)listOphta.Count / 10);
                pagination.MaxPageCount = count;
                ophtalmologuesDataGrid.ItemsSource = listOphta.Skip(skip).Take(10);

                ophtalmologuesDataGrid.Visibility = Visibility.Visible;
            }
            catch (Exception exp)
            {
                Console.WriteLine(exp.Message);
                nothingBox.Visibility = Visibility.Visible;
            }
            finally
            {
                loadingBox.Visibility = Visibility.Collapsed;
            }
        }


        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var item in grid.Columns)
            {
                if (item.Header.ToString() == "Edit")
                {
                    item.DisplayIndex = grid.Columns.Count - 1;
                    break;
                }
            }
        }

        private void AddPresetButton_Click(object sender, RoutedEventArgs e)
        {
            var addButton = sender as FrameworkElement;
            if (addButton != null)
            {
                addButton.ContextMenu.IsOpen = true;
            }
        }

        private void voirOphtalmologue(object sender, RoutedEventArgs e)
        {
            ophtalmologue ophtaRow = ophtalmologuesDataGrid.SelectedItem as ophtalmologue;
            int ophtaId = ophtaRow.id;

            OphtaProfile ophtaProfile = new OphtaProfile(ophtaId, this);

            MyContext.navigateTo(ophtaProfile);
        }

        private void updateOphtalmologue(object sender, RoutedEventArgs e)
        {

            ophtalmologue ophtaRow = ophtalmologuesDataGrid.SelectedItem as ophtalmologue;
            int ophtaId = ophtaRow.id;
            UpdateOphta update = new UpdateOphta(db.ophtalmologues.Where(ophtalmologue => ophtalmologue.id == ophtaId).SingleOrDefault(), this);
            MyContext.navigateTo(update);
        }
        private void deleteOphtalmologue(object sender, RoutedEventArgs e)
        {

            ophtalmologue ophtaRow = ophtalmologuesDataGrid.SelectedItem as ophtalmologue;
            db.ophtalmologues.Remove(ophtaRow);
            db.SaveChanges();
        }
        private void addOphtalmologue(object sender, RoutedEventArgs e)
        {
            AddOphta add_ophta = new AddOphta();
            MyContext.navigateTo(add_ophta);
            ophtalmologuesDataGrid.Items.Refresh();
        }

        private void pagination_PageUpdated(object sender, HandyControl.Data.FunctionEventArgs<int> e)
        {
            getOphtalmologues((e.Info - 1) * 10);
        }

        private void SearchBar_TextChanged(object sender, TextChangedEventArgs e)
        {
            if (searchBar.Text != "") cancelFocus.Visibility = Visibility.Visible;
            else cancelFocus.Visibility = Visibility.Collapsed;

            getOphtalmologues(0);
        }

        private void CancelFocus_Click(object sender, RoutedEventArgs e)
        {
            searchBar.Text = "";
        }


        private void checkCmd(object sender, RoutedEventArgs e)
        {
            CheckBox checkBox = (CheckBox)e.OriginalSource;
            DataGridRow dataGridRow = VisualTreeHelpers.FindAncestor<DataGridRow>(checkBox);
            ophtalmologue ophtalmologue = (ophtalmologue)dataGridRow.DataContext;

            checkedOphta.Add(ophtalmologue);

            if (checkedOphta.Count() > 0)
                groupInfo.Visibility = Visibility.Visible;
            else
                groupInfo.Visibility = Visibility.Collapsed;
        }

        private void unCheckCmd(object sender, RoutedEventArgs e)
        {
            CheckBox checkBox = (CheckBox)e.OriginalSource;
            DataGridRow dataGridRow = VisualTreeHelpers.FindAncestor<DataGridRow>(checkBox);
            ophtalmologue ophtalmologue = (ophtalmologue)dataGridRow.DataContext;

            checkedOphta.Remove(ophtalmologue);

            if (checkedOphta.Count() > 0)
                groupInfo.Visibility = Visibility.Visible;
            else
                groupInfo.Visibility = Visibility.Collapsed;
        }

        private void deleteMany(object sender, RoutedEventArgs e)
        {
            DbContextTransaction transaction = db.Database.BeginTransaction();
            try
            {
                foreach (ophtalmologue ophtalmologue in checkedOphta)
                {
                    db.ophtalmologues.Remove(ophtalmologue);
                    db.SaveChanges();
                }

                transaction.Commit();
            }
            catch (Exception)
            {
                transaction.Rollback();
                MessageBox.Show("Erreur");
            }
        }

    }
}
