using HandyControl.Controls;
using MenuWithSubMenu.Model;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MenuWithSubMenu.Pages
{
    /// <summary>
    /// Interaction logic for AllUsers.xaml
    /// </summary>
    public partial class AllUsers : Page
    {
        dbEntities db;
        public AllUsers()
        {
            InitializeComponent();
           
            db = new dbEntities();

            getClients();
        }

        private async void getClients()
        {
            loadingBox.Visibility = Visibility.Visible;
            clientsDataGrid.Visibility = Visibility.Hidden;

            try
            {
                clientsDataGrid.ItemsSource = await db.clients.Select(c => new { c.cin, c.nom, c.prenom, c.adresse, c.email, c.dateNaissance }).ToListAsync();
            }
            catch (Exception exp)
            {
                Console.WriteLine(exp.Message);
            }
            finally
            {
                loadingBox.Visibility = Visibility.Hidden;
                clientsDataGrid.Visibility = Visibility.Visible;
            }
        }


        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var item in grid.Columns)
            {
                if (item.Header.ToString() == "Edit")
                {
                    item.DisplayIndex = grid.Columns.Count - 1;
                    break;
                }
            }
        }

        private void AddPresetButton_Click(object sender, RoutedEventArgs e)
        {
            var addButton = sender as FrameworkElement;
            if (addButton != null)
            {
                addButton.ContextMenu.IsOpen = true;
            }
        }

        private void voirClient(object sender, RoutedEventArgs e)
        {
            client clientRow = clientsDataGrid.SelectedItem as client;  
            string clientCin = clientRow.cin;  

            

            foreach (System.Windows.Window window in Application.Current.Windows)
            {
                if (window.GetType() == typeof(MainWindow))
                {
                    ClientProfile clientProfile = new ClientProfile(clientCin);
                    (window as MainWindow).MainWindowFrame.Navigate(clientProfile);
                }
            }
        }

        private void updateClient(object sender, RoutedEventArgs e)
        {

            client clientRow = clientsDataGrid.SelectedItem as client;
            string clientCin = clientRow.cin;

            foreach (System.Windows.Window window in Application.Current.Windows)
            {
                if (window.GetType() == typeof(MainWindow))
                {
                    UpdateClient update = new UpdateClient(db.clients.Where(client => client.cin == clientCin).SingleOrDefault());
                    (window as MainWindow).MainWindowFrame.Navigate(update);
                }
            }
        }
        private void deleteClient(object sender, RoutedEventArgs e)
        {

            client clientRow = clientsDataGrid.SelectedItem as client;
            db.clients.Remove(clientRow);
            db.SaveChanges();

            
        }
    }
}
