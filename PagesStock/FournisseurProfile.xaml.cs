using MenuWithSubMenu.Model;
using MenuWithSubMenu.Utils;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MenuWithSubMenu.PagesStock
{
    /// <summary>
    /// Interaction logic for FournisseurProfile.xaml
    /// </summary>
    public partial class FournisseurProfile : Page
    {
        private dbEntities db;
        private fournisseur fournisseur;
        private int fournisseurId;
        private Page prevPage;

        public FournisseurProfile(int fournisseurId, Page prevP)
        {
            InitializeComponent();

            this.fournisseurId = fournisseurId;
            prevPage = prevP;

            db = new dbEntities();

            getFournisseurInformation();
        }

        public void getFournisseurInformation()
        {
            // get fournisseur
            fournisseur = db.fournisseurs.Where(fournisseur => fournisseur.idFournisseur == this.fournisseurId).SingleOrDefault();

            // information
            nomBox.Text = fournisseur.Nom;
            adresseBox.Text = fournisseur.Adresse;
            emailBox.Text = fournisseur.Email;
            telephoneBox.Text = fournisseur.Tel;
            descBox.Text = fournisseur.Description;

            // get commandes
            commandesData.ItemsSource = db.cmdfournisseurs.Where(cmd => cmd.idFournisseur == this.fournisseurId).ToList();
        }

        private void voirCommande(object sender, RoutedEventArgs e)
        {
            cmdfournisseur cmdfournisseurRow = commandesData.SelectedItem as cmdfournisseur;
            int cmdId = cmdfournisseurRow.idCmdFournisseur;

            // AboutOrdonnance aboutOrdonnance = new AboutOrdonnance(ordonnanceId, this);

            // MyContext.navigateTo(aboutOrdonnance);
        }

        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var item in grid.Columns)
            {
                if (item.Header.ToString() == "Edit")
                {
                    item.DisplayIndex = grid.Columns.Count - 1;
                    break;
                }
            }
        }

        private void AddPresetButton_Click(object sender, RoutedEventArgs e)
        {
            var addButton = sender as FrameworkElement;
            if (addButton != null)
            {
                addButton.ContextMenu.IsOpen = true;
            }
        }

        private void ReturnBtn_Click(object sender, RoutedEventArgs e)
        {
            MyContext.navigateTo(prevPage);
        }
    }
}
