using MenuWithSubMenu.Model;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MenuWithSubMenu.PagesStock
{
    /// <summary>
    /// Logique d'interaction pour CmdsLigne.xaml
    /// </summary>
    public partial class CmdsLigne : Page
    {
        private dbEntities db;
        private List<lignecommande> lignesCmd;
        private int count,idCmd;
        public CmdsLigne(int idCmd)
        {
            InitializeComponent();
            db = new dbEntities();
            this.idCmd = idCmd;
            getLignes(0);
        }

        private async void getLignes(int skip)
        {
            loadingBox.Visibility = Visibility.Visible;
            cmdFourniDataGrid.Visibility = Visibility.Hidden;

            try
            {
                lignesCmd = await db.lignecommandes.Where(l => l.idCmdFournisseur == idCmd).ToListAsync();

                count = (int)Math.Ceiling((decimal)lignesCmd.Count / 10);
                pagination.MaxPageCount = count;
                cmdFourniDataGrid.ItemsSource = lignesCmd.Skip(skip).Take(10);

            }
            catch (Exception exp)
            {
                Console.WriteLine(exp.Message);
            }
            finally
            {
                loadingBox.Visibility = Visibility.Hidden;
                cmdFourniDataGrid.Visibility = Visibility.Visible;
            }
        }

        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var item in grid.Columns)
            {
                if (item.Header.ToString() == "Edit")
                {
                    item.DisplayIndex = grid.Columns.Count - 1;
                    break;
                }
            }
        }

        private void page_PageUpdated(object sender, HandyControl.Data.FunctionEventArgs<int> e)
        {

            getLignes((e.Info - 1) * 10);
        }
    }
}
